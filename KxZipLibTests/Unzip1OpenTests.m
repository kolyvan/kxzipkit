//
//  Unzip1OpenTests.m
//  KxZipKit
//
//  Created by Kolyvan on 06.04.15.
//  Copyright (c) 2015 Kolyvan. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <XCTest/XCTest.h>
#import "KxUnzipArchive.h"

@interface Unzip1OpenTests : XCTestCase

@end

@implementation Unzip1OpenTests

- (void)setUp {
    [super setUp];
}

- (void)tearDown {
 
    [super tearDown];
}

- (void)testOpen1 {

    NSBundle *bundle = [NSBundle bundleForClass:self.class];
    NSString *zipPath = [bundle pathForResource:@"test1" ofType:@"zip"];
    KxUnzipArchive *unzArchive = [[KxUnzipArchive alloc] initWithPath:zipPath password:nil];
    
    XCTAssertNotNil(unzArchive, @"Pass");
    XCTAssertTrue(unzArchive.numFiles == 1, @"Pass");
    
    zipPath = [bundle pathForResource:@"test1_winru" ofType:@"zip"];
    unzArchive = [[KxUnzipArchive alloc] initWithPath:zipPath password:nil];
    
    XCTAssertNotNil(unzArchive, @"Pass");
    XCTAssertTrue(unzArchive.numFiles == 1, @"Pass");
}

- (void)testOpen2 {
    
    NSBundle *bundle = [NSBundle bundleForClass:self.class];
    NSString *zipPath = [bundle pathForResource:@"test2" ofType:@"zip"];
    KxUnzipArchive *unzArchive = [[KxUnzipArchive alloc] initWithPath:zipPath password:nil];
    
    XCTAssertNotNil(unzArchive, @"Pass");
    XCTAssertTrue(unzArchive.numFiles == 6, @"Pass");
    
    zipPath = [bundle pathForResource:@"test2_winru" ofType:@"zip"];
    unzArchive = [[KxUnzipArchive alloc] initWithPath:zipPath password:nil];
    
    XCTAssertNotNil(unzArchive, @"Pass");
    XCTAssertTrue(unzArchive.numFiles == 6, @"Pass");
}

- (void) testOpen1Protected {
    
    NSBundle *bundle = [NSBundle bundleForClass:self.class];
    NSString *zipPath = [bundle pathForResource:@"test1_prot" ofType:@"zip"];
    KxUnzipArchive *unzArchive = [[KxUnzipArchive alloc] initWithPath:zipPath password:nil];
    
    XCTAssertNotNil(unzArchive, @"Pass");
    XCTAssertTrue(unzArchive.numFiles == 1, @"Pass");
    
    zipPath = [bundle pathForResource:@"test1_winru_prot" ofType:@"zip"];
    unzArchive = [[KxUnzipArchive alloc] initWithPath:zipPath password:nil];
    
    XCTAssertNotNil(unzArchive, @"Pass");
    XCTAssertTrue(unzArchive.numFiles == 1, @"Pass");
}


@end
